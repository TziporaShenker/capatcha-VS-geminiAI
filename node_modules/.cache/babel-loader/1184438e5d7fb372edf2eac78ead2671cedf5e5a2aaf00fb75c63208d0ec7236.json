{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\GEMINI-AI-PROJECT\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [captchaVerified, setCaptchaVerified] = useState(false);\n  const [captchaToken, setCaptchaToken] = useState(\"1\");\n  const [verificationResult, setVerificationResult] = useState(\"\");\n  const [buttonClickCount, setButtonClickCount] = useState(0); // משתנה לספירת הלחיצות\n  const [buttonState, setButtonState] = useState(0); // משתנה שמתחיל ב-0 ומשתנה ל-1 לאחר לחיצה\n\n  // Google reCAPTCHA Site Key (תחליפי למפתח שלך)\n  const RECAPTCHA_SITE_KEY = \"6LfdW4QqAAAAADVsDtxwmOhFo3j9LI1oLeEvmbvb\";\n\n  // קריאה כשהמשתמש מסיים את מבחן ה-CAPTCHA\n  const handleCaptchaChange = token => {\n    console.log(\"Captcha token:\", token);\n    if (token) {\n      setCaptchaToken(token);\n      setCaptchaVerified(true);\n    }\n    // else {\n    //   setCaptchaVerified(false);\n    //   setCaptchaToken(\"\");\n    // }\n  };\n\n  // טיפול בלחיצה על הכפתור\n  const handleSendCaptcha = () => {\n    setButtonClickCount(prevCount => prevCount + 1); // הגדלת מספר הלחיצות\n    if (buttonState === 0) {\n      setButtonState(1); // עדכון המצב ל-1 לאחר הלחיצה הראשונה\n    }\n    console.log(`Button clicked ${buttonClickCount + 1} times`);\n    // ניתן להוסיף כאן שליחה לשרת אם נדרש\n  };\n\n  // שליחת הטוקן לשרת לבדיקה\n  const handleSubmit = async () => {\n    try {\n      if (!captchaToken) {\n        alert(\"Please complete the CAPTCHA!\");\n        return;\n      }\n      const response = await axios.post(\"http://localhost:5000/verify-captcha\", {\n        token: captchaToken\n      });\n      setVerificationResult(response.data.success ? \"CAPTCHA Verified!\" : \"CAPTCHA Failed!\");\n    } catch (error) {\n      console.error(\"Error verifying CAPTCHA:\", error);\n      setVerificationResult(\"Verification failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google reCAPTCHA V2 Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Complete the CAPTCHA below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n      sitekey: RECAPTCHA_SITE_KEY,\n      onChange: handleCaptchaChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit\n      // disabled={!captchaVerified}\n      ,\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\n        backgroundColor: captchaVerified ? \"blue\" : \"gray\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\"\n      },\n      children: \"Next Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendCaptcha // קריאה לפונקציה שמטפלת בלחיצה\n      // disabled={!captchaVerified}\n      ,\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\n        backgroundColor: captchaVerified ? \"blue\" : \"gray\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\"\n      },\n      children: \"Send Capatcha to Gemini AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), verificationResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: verificationResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Button clicked: \", buttonClickCount, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"frjsVnsyeVGh8P8a5iEnrTK7CX4=\");\n_c = App;\nexport default App;\n// import React, { useState, useEffect } from \"react\";\n// import ReCAPTCHA from \"react-google-recaptcha\";\n// import axios from \"axios\";\n\n// const App = () => {\n//   const [captchaVerified, setCaptchaVerified] = useState(false);\n//   const [captchaToken, setCaptchaToken] = useState(\"\");\n//   const [verificationResult, setVerificationResult] = useState(\"\");\n\n//   // Google reCAPTCHA Site Key (תחליפי למפתח שלך)\n//   const RECAPTCHA_SITE_KEY = \"6LfdW4QqAAAAADVsDtxwmOhFo3j9LI1oLeEvmbvb\";\n\n//   // מעקב אחרי כישלונות CAPTCHA\n//   useEffect(() => {\n//     const observer = new MutationObserver((mutationsList) => {\n//       for (let mutation of mutationsList) {\n//         if (\n//           mutation.type === \"childList\" &&\n//           mutation.target.innerText.includes(\"נסה שוב\")\n//         ) {\n//           console.log(\"User failed CAPTCHA attempt!\");\n//           // שליחת הניסיון הכושל לשרת\n//           axios.post(\"http://localhost:5000/track-failed-captcha\", {\n//             event: \"failed_attempt\",\n//           }).then(() => {\n//             console.log(\"Failed attempt logged successfully.\");\n//           }).catch((error) => {\n//             console.error(\"Error logging failed attempt:\", error);\n//           });\n//         }\n//       }\n//     });\n\n//     // מציאת האלמנט של ה-CAPTCHA ב-DOM\n//     const captchaContainer = document.querySelector(\".g-recaptcha\");\n//     if (captchaContainer) {\n//       observer.observe(captchaContainer, {\n//         childList: true,\n//         subtree: true,\n//       });\n//     }\n\n//     // ניקוי ה-observer\n//     return () => {\n//       observer.disconnect();\n//     };\n//   }, []);\n\n//   // קריאה כשהמשתמש מסיים את מבחן ה-CAPTCHA\n//   const handleCaptchaChange = (token) => {\n//     console.log(\"Captcha token:\", token);\n//     if (token) {\n//       setCaptchaToken(token);\n//       setCaptchaVerified(true);\n//     } \n//     // else {\n//     //   setCaptchaVerified(false);\n//     //   setCaptchaToken(\"\");\n//     // }\n//   };\n\n//   // שליחת הטוקן לשרת לבדיקה\n//   const handleSubmit = async () => {\n//     try {\n//       if (!captchaToken) {\n//         alert(\"Please complete the CAPTCHA!\");\n//         return;\n//       }\n\n//       const response = await axios.post(\"http://localhost:5000/verify-captcha\", {\n//         token: captchaToken,\n//       });\n\n//       setVerificationResult(response.data.success ? \"CAPTCHA Verified!\" : \"CAPTCHA Failed!\");\n//     } catch (error) {\n//       console.error(\"Error verifying CAPTCHA:\", error);\n//       setVerificationResult(\"Verification failed. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h1>Google reCAPTCHA V2 Demo</h1>\n//       <p>Complete the CAPTCHA below:</p>\n//       <ReCAPTCHA\n//         sitekey={RECAPTCHA_SITE_KEY}\n//         onChange={handleCaptchaChange}\n//       />\n//       <button\n//         onClick={handleSubmit}\n//         style={{\n//           marginTop: \"20px\",\n//           padding: \"10px 20px\",\n//           fontSize: \"16px\",\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\n//           color: \"white\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//         }}\n//       >\n//         Next Page\n//       </button>\n//       <button\n//         style={{\n//           marginTop: \"20px\",\n//           padding: \"10px 20px\",\n//           fontSize: \"16px\",\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\n//           color: \"white\",\n//           border: \"none\",\n//           borderRadius: \"5px\",\n//         }}\n//       >\n//         Send CAPTCHA to Gemini AI\n//       </button>\n//       {verificationResult && <p style={{ marginTop: \"20px\" }}>{verificationResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReCAPTCHA","axios","jsxDEV","_jsxDEV","App","_s","captchaVerified","setCaptchaVerified","captchaToken","setCaptchaToken","verificationResult","setVerificationResult","buttonClickCount","setButtonClickCount","buttonState","setButtonState","RECAPTCHA_SITE_KEY","handleCaptchaChange","token","console","log","handleSendCaptcha","prevCount","handleSubmit","alert","response","post","data","success","error","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","sitekey","onChange","onClick","padding","fontSize","backgroundColor","color","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/GEMINI-AI-PROJECT/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [captchaVerified, setCaptchaVerified] = useState(false);\r\n  const [captchaToken, setCaptchaToken] = useState(\"1\");\r\n  const [verificationResult, setVerificationResult] = useState(\"\");\r\n  const [buttonClickCount, setButtonClickCount] = useState(0); // משתנה לספירת הלחיצות\r\n  const [buttonState, setButtonState] = useState(0); // משתנה שמתחיל ב-0 ומשתנה ל-1 לאחר לחיצה\r\n\r\n\r\n  // Google reCAPTCHA Site Key (תחליפי למפתח שלך)\r\n  const RECAPTCHA_SITE_KEY = \"6LfdW4QqAAAAADVsDtxwmOhFo3j9LI1oLeEvmbvb\";\r\n\r\n  // קריאה כשהמשתמש מסיים את מבחן ה-CAPTCHA\r\n  const handleCaptchaChange = (token) => {\r\n    console.log(\"Captcha token:\", token);\r\n    if (token) {\r\n      setCaptchaToken(token);\r\n      setCaptchaVerified(true);\r\n    } \r\n    // else {\r\n    //   setCaptchaVerified(false);\r\n    //   setCaptchaToken(\"\");\r\n    // }\r\n  };\r\n  \r\n   // טיפול בלחיצה על הכפתור\r\n   const handleSendCaptcha = () => {\r\n    setButtonClickCount((prevCount) => prevCount + 1); // הגדלת מספר הלחיצות\r\n    if (buttonState === 0) {\r\n      setButtonState(1); // עדכון המצב ל-1 לאחר הלחיצה הראשונה\r\n    }\r\n    console.log(`Button clicked ${buttonClickCount + 1} times`);\r\n    // ניתן להוסיף כאן שליחה לשרת אם נדרש\r\n  };\r\n  \r\n  // שליחת הטוקן לשרת לבדיקה\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (!captchaToken) {\r\n        alert(\"Please complete the CAPTCHA!\");\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post(\"http://localhost:5000/verify-captcha\", {\r\n        token: captchaToken,\r\n      });\r\n\r\n      setVerificationResult(response.data.success ? \"CAPTCHA Verified!\" : \"CAPTCHA Failed!\");\r\n    } catch (error) {\r\n      console.error(\"Error verifying CAPTCHA:\", error);\r\n      setVerificationResult(\"Verification failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h1>Google reCAPTCHA V2 Demo</h1>\r\n      <p>Complete the CAPTCHA below:</p>\r\n      <ReCAPTCHA\r\n        sitekey={RECAPTCHA_SITE_KEY}\r\n        onChange={handleCaptchaChange}\r\n      />\r\n      <button\r\n        onClick={handleSubmit}\r\n        // disabled={!captchaVerified}\r\n        style={{\r\n          marginTop: \"20px\",\r\n          padding: \"10px 20px\",\r\n          fontSize: \"16px\",\r\n          // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\r\n          backgroundColor: captchaVerified ? \"blue\" : \"gray\",\r\n          color: \"white\",\r\n          border: \"none\", \r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        Next Page\r\n      </button>\r\n      <button\r\n        onClick={handleSendCaptcha} // קריאה לפונקציה שמטפלת בלחיצה\r\n        // disabled={!captchaVerified}\r\n        style={{\r\n          marginTop: \"20px\",\r\n          padding: \"10px 20px\",\r\n          fontSize: \"16px\",\r\n          // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\r\n          backgroundColor: captchaVerified ? \"blue\" : \"gray\",\r\n          color: \"white\",\r\n          border: \"none\", \r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        Send Capatcha to Gemini AI\r\n      </button>\r\n      {verificationResult && <p style={{ marginTop: \"20px\" }}>{verificationResult}</p>}\r\n      <p>Button clicked: {buttonClickCount} times</p> {/* הצגת מספר הלחיצות */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import ReCAPTCHA from \"react-google-recaptcha\";\r\n// import axios from \"axios\";\r\n\r\n// const App = () => {\r\n//   const [captchaVerified, setCaptchaVerified] = useState(false);\r\n//   const [captchaToken, setCaptchaToken] = useState(\"\");\r\n//   const [verificationResult, setVerificationResult] = useState(\"\");\r\n\r\n//   // Google reCAPTCHA Site Key (תחליפי למפתח שלך)\r\n//   const RECAPTCHA_SITE_KEY = \"6LfdW4QqAAAAADVsDtxwmOhFo3j9LI1oLeEvmbvb\";\r\n\r\n//   // מעקב אחרי כישלונות CAPTCHA\r\n//   useEffect(() => {\r\n//     const observer = new MutationObserver((mutationsList) => {\r\n//       for (let mutation of mutationsList) {\r\n//         if (\r\n//           mutation.type === \"childList\" &&\r\n//           mutation.target.innerText.includes(\"נסה שוב\")\r\n//         ) {\r\n//           console.log(\"User failed CAPTCHA attempt!\");\r\n//           // שליחת הניסיון הכושל לשרת\r\n//           axios.post(\"http://localhost:5000/track-failed-captcha\", {\r\n//             event: \"failed_attempt\",\r\n//           }).then(() => {\r\n//             console.log(\"Failed attempt logged successfully.\");\r\n//           }).catch((error) => {\r\n//             console.error(\"Error logging failed attempt:\", error);\r\n//           });\r\n//         }\r\n//       }\r\n//     });\r\n\r\n//     // מציאת האלמנט של ה-CAPTCHA ב-DOM\r\n//     const captchaContainer = document.querySelector(\".g-recaptcha\");\r\n//     if (captchaContainer) {\r\n//       observer.observe(captchaContainer, {\r\n//         childList: true,\r\n//         subtree: true,\r\n//       });\r\n//     }\r\n\r\n//     // ניקוי ה-observer\r\n//     return () => {\r\n//       observer.disconnect();\r\n//     };\r\n//   }, []);\r\n\r\n//   // קריאה כשהמשתמש מסיים את מבחן ה-CAPTCHA\r\n//   const handleCaptchaChange = (token) => {\r\n//     console.log(\"Captcha token:\", token);\r\n//     if (token) {\r\n//       setCaptchaToken(token);\r\n//       setCaptchaVerified(true);\r\n//     } \r\n//     // else {\r\n//     //   setCaptchaVerified(false);\r\n//     //   setCaptchaToken(\"\");\r\n//     // }\r\n//   };\r\n\r\n//   // שליחת הטוקן לשרת לבדיקה\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       if (!captchaToken) {\r\n//         alert(\"Please complete the CAPTCHA!\");\r\n//         return;\r\n//       }\r\n\r\n//       const response = await axios.post(\"http://localhost:5000/verify-captcha\", {\r\n//         token: captchaToken,\r\n//       });\r\n\r\n//       setVerificationResult(response.data.success ? \"CAPTCHA Verified!\" : \"CAPTCHA Failed!\");\r\n//     } catch (error) {\r\n//       console.error(\"Error verifying CAPTCHA:\", error);\r\n//       setVerificationResult(\"Verification failed. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <h1>Google reCAPTCHA V2 Demo</h1>\r\n//       <p>Complete the CAPTCHA below:</p>\r\n//       <ReCAPTCHA\r\n//         sitekey={RECAPTCHA_SITE_KEY}\r\n//         onChange={handleCaptchaChange}\r\n//       />\r\n//       <button\r\n//         onClick={handleSubmit}\r\n//         style={{\r\n//           marginTop: \"20px\",\r\n//           padding: \"10px 20px\",\r\n//           fontSize: \"16px\",\r\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\r\n//           color: \"white\",\r\n//           border: \"none\",\r\n//           borderRadius: \"5px\",\r\n//         }}\r\n//       >\r\n//         Next Page\r\n//       </button>\r\n//       <button\r\n//         style={{\r\n//           marginTop: \"20px\",\r\n//           padding: \"10px 20px\",\r\n//           fontSize: \"16px\",\r\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\r\n//           color: \"white\",\r\n//           border: \"none\",\r\n//           borderRadius: \"5px\",\r\n//         }}\r\n//       >\r\n//         Send CAPTCHA to Gemini AI\r\n//       </button>\r\n//       {verificationResult && <p style={{ marginTop: \"20px\" }}>{verificationResult}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}