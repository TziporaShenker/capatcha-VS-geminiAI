{"ast":null,"code":"// import React, { useState } from \"react\";\n// import ReCAPTCHA from \"react-google-recaptcha\";\n// import axios from \"axios\";\n\n// const App = () => {\n//   const [captchaVerified, setCaptchaVerified] = useState(false);\n//   const [captchaToken, setCaptchaToken] = useState(\"1\");\n//   const [verificationResult, setVerificationResult] = useState(\"\");\n\n//   // Google reCAPTCHA Site Key (תחליפי למפתח שלך)\n//   const RECAPTCHA_SITE_KEY = \"6LfdW4QqAAAAADVsDtxwmOhFo3j9LI1oLeEvmbvb\";\n\n//   // קריאה כשהמשתמש מסיים את מבחן ה-CAPTCHA\n//   const handleCaptchaChange = (token) => {\n//     console.log(\"Captcha token:\", token);\n//     if (token) {\n//       setCaptchaToken(token);\n//       setCaptchaVerified(true);\n//     } \n//     // else {\n//     //   setCaptchaVerified(false);\n//     //   setCaptchaToken(\"\");\n//     // }\n//   };\n\n//   // שליחת הטוקן לשרת לבדיקה\n//   const handleSubmit = async () => {\n//     try {\n//       if (!captchaToken) {\n//         alert(\"Please complete the CAPTCHA!\");\n//         return;\n//       }\n\n//       const response = await axios.post(\"http://localhost:5000/verify-captcha\", {\n//         token: captchaToken,\n//       });\n\n//       setVerificationResult(response.data.success ? \"CAPTCHA Verified!\" : \"CAPTCHA Failed!\");\n//     } catch (error) {\n//       console.error(\"Error verifying CAPTCHA:\", error);\n//       setVerificationResult(\"Verification failed. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n//       <h1>Google reCAPTCHA V2 Demo</h1>\n//       <p>Complete the CAPTCHA below:</p>\n//       <ReCAPTCHA\n//         sitekey={RECAPTCHA_SITE_KEY}\n//         onChange={handleCaptchaChange}\n//       />\n//       <button\n//         onClick={handleSubmit}\n//         // disabled={!captchaVerified}\n//         style={{\n//           marginTop: \"20px\",\n//           padding: \"10px 20px\",\n//           fontSize: \"16px\",\n//           // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\n//           color: \"white\",\n//           border: \"none\", \n//           borderRadius: \"5px\",\n//         }}\n//       >\n//         Next Page\n//       </button>\n//       <button\n//         // onClick={handleSubmit}\n//         // disabled={!captchaVerified}\n//         style={{\n//           marginTop: \"20px\",\n//           padding: \"10px 20px\",\n//           fontSize: \"16px\",\n//           // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\n//           color: \"white\",\n//           border: \"none\", \n//           borderRadius: \"5px\",\n//         }}\n//       >\n//         Send Capatcha to Gemini AI\n//       </button>\n//       {verificationResult && <p style={{ marginTop: \"20px\" }}>{verificationResult}</p>}\n//     </div>\n//   );\n// };\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Owner/Desktop/GEMINI-AI-PROJECT/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import ReCAPTCHA from \"react-google-recaptcha\";\r\n// import axios from \"axios\";\r\n\r\n// const App = () => {\r\n//   const [captchaVerified, setCaptchaVerified] = useState(false);\r\n//   const [captchaToken, setCaptchaToken] = useState(\"1\");\r\n//   const [verificationResult, setVerificationResult] = useState(\"\");\r\n\r\n//   // Google reCAPTCHA Site Key (תחליפי למפתח שלך)\r\n//   const RECAPTCHA_SITE_KEY = \"6LfdW4QqAAAAADVsDtxwmOhFo3j9LI1oLeEvmbvb\";\r\n\r\n//   // קריאה כשהמשתמש מסיים את מבחן ה-CAPTCHA\r\n//   const handleCaptchaChange = (token) => {\r\n//     console.log(\"Captcha token:\", token);\r\n//     if (token) {\r\n//       setCaptchaToken(token);\r\n//       setCaptchaVerified(true);\r\n//     } \r\n//     // else {\r\n//     //   setCaptchaVerified(false);\r\n//     //   setCaptchaToken(\"\");\r\n//     // }\r\n//   };\r\n  \r\n  \r\n//   // שליחת הטוקן לשרת לבדיקה\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       if (!captchaToken) {\r\n//         alert(\"Please complete the CAPTCHA!\");\r\n//         return;\r\n//       }\r\n\r\n//       const response = await axios.post(\"http://localhost:5000/verify-captcha\", {\r\n//         token: captchaToken,\r\n//       });\r\n\r\n//       setVerificationResult(response.data.success ? \"CAPTCHA Verified!\" : \"CAPTCHA Failed!\");\r\n//     } catch (error) {\r\n//       console.error(\"Error verifying CAPTCHA:\", error);\r\n//       setVerificationResult(\"Verification failed. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n//       <h1>Google reCAPTCHA V2 Demo</h1>\r\n//       <p>Complete the CAPTCHA below:</p>\r\n//       <ReCAPTCHA\r\n//         sitekey={RECAPTCHA_SITE_KEY}\r\n//         onChange={handleCaptchaChange}\r\n//       />\r\n//       <button\r\n//         onClick={handleSubmit}\r\n//         // disabled={!captchaVerified}\r\n//         style={{\r\n//           marginTop: \"20px\",\r\n//           padding: \"10px 20px\",\r\n//           fontSize: \"16px\",\r\n//           // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\r\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\r\n//           color: \"white\",\r\n//           border: \"none\", \r\n//           borderRadius: \"5px\",\r\n//         }}\r\n//       >\r\n//         Next Page\r\n//       </button>\r\n//       <button\r\n//         // onClick={handleSubmit}\r\n//         // disabled={!captchaVerified}\r\n//         style={{\r\n//           marginTop: \"20px\",\r\n//           padding: \"10px 20px\",\r\n//           fontSize: \"16px\",\r\n//           // cursor: captchaVerified ? \"pointer\" : \"not-allowed\",\r\n//           backgroundColor: captchaVerified ? \"blue\" : \"gray\",\r\n//           color: \"white\",\r\n//           border: \"none\", \r\n//           borderRadius: \"5px\",\r\n//         }}\r\n//       >\r\n//         Send Capatcha to Gemini AI\r\n//       </button>\r\n//       {verificationResult && <p style={{ marginTop: \"20px\" }}>{verificationResult}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}